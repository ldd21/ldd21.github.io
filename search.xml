<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>蓝桥杯Java B组真题</title>
      <link href="/post/1e2a5f4e.html"/>
      <url>/post/1e2a5f4e.html</url>
      
        <content type="html"><![CDATA[<blockquote><p>题目来源于官方的真题，有时间再整理题解答案…</p></blockquote><h1 id="蓝桥杯Java-B组蓝桥杯真题"><a href="#蓝桥杯Java-B组蓝桥杯真题" class="headerlink" title="蓝桥杯Java B组蓝桥杯真题"></a>蓝桥杯Java B组蓝桥杯真题</h1><h2 id="试题-A-星期计算"><a href="#试题-A-星期计算" class="headerlink" title="试题 A: 星期计算"></a>试题 A: 星期计算</h2><h3 id="【问题描述】"><a href="#【问题描述】" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>已知今天是星期六，请问 2022 天后是星期几？注意用数字 1 到 7 表示星期一到星期日。</li></ul><h3 id="【答案提交】"><a href="#【答案提交】" class="headerlink" title="【答案提交】"></a>【答案提交】</h3><ul><li>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</li></ul><h2 id="试题-B-山"><a href="#试题-B-山" class="headerlink" title="试题 B: 山"></a>试题 B: 山</h2><h3 id="【问题描述】-1"><a href="#【问题描述】-1" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>这天小明正在学数数。<br>他突然发现有些正整数的形状像一座“山”，比如 123565321、145541，它们左右对称（回文）且数位上的数字先单调不减，后单调不增。小明数了很久也没有数完，他想让你告诉他在区间 [2022, 2022222022] 中有多少个数的形状像一座“山”。</li></ul><h3 id="【答案提交】-1"><a href="#【答案提交】-1" class="headerlink" title="【答案提交】"></a>【答案提交】</h3><ul><li>这是一道结果填空的题，你只需要算出结果后提交即可。本题的结果为一个整数，在提交答案时只填写这个整数，填写多余的内容将无法得分。</li></ul><h2 id="试题-C-字符统计"><a href="#试题-C-字符统计" class="headerlink" title="试题 C: 字符统计"></a>试题 C: 字符统计</h2><h3 id="【问题描述】-2"><a href="#【问题描述】-2" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>给定一个只包含大写字母的字符串 S，请你输出其中出现次数最多的字母。如果有多个字母均出现了最多次，按字母表顺序依次输出所有这些字母。</li></ul><h3 id="【输入格式】"><a href="#【输入格式】" class="headerlink" title="【输入格式】"></a>【输入格式】</h3><ul><li>一个只包含大写字母的字符串 S .</li></ul><h3 id="【输出格式】"><a href="#【输出格式】" class="headerlink" title="【输出格式】"></a>【输出格式】</h3><ul><li>若干个大写字母，代表答案。</li></ul><h3 id="【样例输入】"><a href="#【样例输入】" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">BABBACAC</span><br></pre></td></tr></table></figure><h3 id="【样例输出】"><a href="#【样例输出】" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">AB</span><br></pre></td></tr></table></figure><h3 id="【评测用例规模与约定】"><a href="#【评测用例规模与约定】" class="headerlink" title="【评测用例规模与约定】"></a>【评测用例规模与约定】</h3><ul><li>对于 100% 的评测用例，1 ≤ |S | ≤ 106</li></ul><h2 id="试题-D-最少刷题数"><a href="#试题-D-最少刷题数" class="headerlink" title="试题 D: 最少刷题数"></a>试题 D: 最少刷题数</h2><h3 id="【问题描述】-3"><a href="#【问题描述】-3" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>小蓝老师教的编程课有 N 名学生，编号依次是 1 . . . N。第 i 号学生这学期<br>刷题的数量是 Ai。对于每一名学生，请你计算他至少还要再刷多少道题，才能使得全班刷题比他多的学生数不超过刷题比他少的学生数。</li></ul><h3 id="【输入格式】-1"><a href="#【输入格式】-1" class="headerlink" title="【输入格式】"></a>【输入格式】</h3><ul><li>第一行包含一个正整数 N。</li><li>第二行包含 N 个整数：A1, A2, A3, . . . , AN.</li></ul><h3 id="【输出格式】-1"><a href="#【输出格式】-1" class="headerlink" title="【输出格式】"></a>【输出格式】</h3><ul><li>输出 N 个整数，依次表示第 1 . . . N 号学生分别至少还要再刷多少道题。</li></ul><h3 id="【样例输入】-1"><a href="#【样例输入】-1" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"> 5</span><br><span class="line">12 10 15 20 6</span><br></pre></td></tr></table></figure><h3 id="【样例输出】-1"><a href="#【样例输出】-1" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 3 0 0 7</span><br></pre></td></tr></table></figure><h3 id="【评测用例规模与约定】-1"><a href="#【评测用例规模与约定】-1" class="headerlink" title="【评测用例规模与约定】"></a>【评测用例规模与约定】</h3><ul><li>对于 30% 的数据，1 ≤ N ≤ 1000, 0 ≤ Ai ≤ 1000.</li><li>对于 100% 的数据，1 ≤ N ≤ 100000, 0 ≤ Ai ≤ 100000</li></ul><h2 id="试题-E-求阶乘"><a href="#试题-E-求阶乘" class="headerlink" title="试题 E: 求阶乘"></a>试题 E: 求阶乘</h2><h3 id="【问题描述】-4"><a href="#【问题描述】-4" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>满足 N! 的末尾恰好有 K 个 0 的最小的 N 是多少?</li><li>如果这样的 N 不存在输出 −1。</li></ul><h3 id="【输入格式】-2"><a href="#【输入格式】-2" class="headerlink" title="【输入格式】"></a>【输入格式】</h3><ul><li>一个整数 K。</li></ul><h3 id="【输出格式】-2"><a href="#【输出格式】-2" class="headerlink" title="【输出格式】"></a>【输出格式】</h3><ul><li>一个整数代表答案。</li></ul><h3 id="【样例输入】-2"><a href="#【样例输入】-2" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2</span><br></pre></td></tr></table></figure><h3 id="【样例输出】-2"><a href="#【样例输出】-2" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">10</span><br></pre></td></tr></table></figure><h3 id="【评测用例规模与约定】-2"><a href="#【评测用例规模与约定】-2" class="headerlink" title="【评测用例规模与约定】"></a>【评测用例规模与约定】</h3><ul><li>对于 30% 的数据，1 ≤ K ≤ 106</li><li>对于 100% 的数据，1 ≤ K ≤ 1018</li></ul><h2 id="试题-F-最大子矩阵"><a href="#试题-F-最大子矩阵" class="headerlink" title="试题 F: 最大子矩阵"></a>试题 F: 最大子矩阵</h2><h3 id="【问题描述】-5"><a href="#【问题描述】-5" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>小明有一个大小为 N × M 的矩阵，可以理解为一个 N 行 M 列的二维数组。我们定义一个矩阵 m 的稳定度 f(m) 为 f(m) &#x3D; max(m) − min(m)，其中 max(m)表示矩阵 m 中的最大值，min(m) 表示矩阵 m 中的最小值。现在小明想要从这个矩阵中找到一个稳定度不大于 limit 的子矩阵，同时他还希望这个子矩阵的面积越大越好（面积可以理解为矩阵中元素个数）。子矩阵定义如下：从原矩阵中选择一组连续的行和一组连续的列，这些行列交点上的元素组成的矩阵即为一个子矩阵。</li></ul><h3 id="【输入格式】-3"><a href="#【输入格式】-3" class="headerlink" title="【输入格式】"></a>【输入格式】</h3><ul><li>第一行输入两个整数 N，M，表示矩阵的大小。</li><li>接下来 N 行，每行输入 M 个整数，表示这个矩阵。</li><li>最后一行输入一个整数 limit，表示限制。</li></ul><h3 id="【输出格式】-3"><a href="#【输出格式】-3" class="headerlink" title="【输出格式】"></a>【输出格式】</h3><ul><li>输出一个整数，分别表示小明选择的子矩阵的最大面积。</li></ul><h3 id="【样例输入】-3"><a href="#【样例输入】-3" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">3 4</span><br><span class="line">2 0 7 9</span><br><span class="line">0 6 9 7</span><br><span class="line">8 4 6 4</span><br><span class="line">8</span><br></pre></td></tr></table></figure><h3 id="【样例输出】-3"><a href="#【样例输出】-3" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><p>6</p><h3 id="【样例说明】"><a href="#【样例说明】" class="headerlink" title="【样例说明】"></a>【样例说明】</h3><ul><li>满足稳定度不大于 8 的且面积最大的子矩阵总共有三个，他们的面积都是6（粗体表示子矩阵元素）：<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">2 0 7 9</span><br><span class="line">0 6 9 7</span><br><span class="line">8 4 6 4</span><br><span class="line"></span><br><span class="line">2 0 7 9</span><br><span class="line">0 6 9 7</span><br><span class="line">8 4 6 4</span><br><span class="line"></span><br><span class="line">2 0 7 9</span><br><span class="line">0 6 9 7</span><br><span class="line">8 4 6 4</span><br></pre></td></tr></table></figure></li></ul><h2 id="试题-G-数组切分"><a href="#试题-G-数组切分" class="headerlink" title="试题 G: 数组切分"></a>试题 G: 数组切分</h2><h3 id="【问题描述】-6"><a href="#【问题描述】-6" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>已知一个长度为 N 的数组：A1, A2, A3, …AN 恰好是 1 ∼ N 的一个排列。现在要求你将 A 数组切分成若干个 (最少一个，最多 N 个) 连续的子数组，并且每个子数组中包含的整数恰好可以组成一段连续的自然数。</li><li>例如对于 A &#x3D; {1, 3, 2, 4}, 一共有 5 种切分方法：</li><li>{1}{3}{2}{4}：每个单独的数显然是 (长度为 1 的) 一段连续的自然数。</li><li>{1}{3, 2}{4}：{3, 2} 包含 2 到 3，是 一段连续的自然数，另外 {1} 和 {4} 显然<br>也是。</li><li>{1}{3, 2, 4}：{3, 2, 4} 包含 2 到 4，是 一段连续的自然数，另外 {1} 显然也是。</li><li>{1, 3, 2}{4}：{1, 3, 2} 包含 1 到 3，是 一段连续的自然数，另外 {4} 显然也是。</li><li>{1, 3, 2, 4}：只有一个子数组，包含 1 到 4，是 一段连续的自然数。</li></ul><h3 id="【输入格式】-4"><a href="#【输入格式】-4" class="headerlink" title="【输入格式】"></a>【输入格式】</h3><ul><li>第一行包含一个整数 N。第二行包含 N 个整数，代表 A 数组。</li></ul><h3 id="【输出格式】-4"><a href="#【输出格式】-4" class="headerlink" title="【输出格式】"></a>【输出格式】</h3><p>输出一个整数表示答案。由于答案可能很大，所以输出其对 1000000007 取模后的值</p><h3 id="【样例输入】-4"><a href="#【样例输入】-4" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">4</span><br><span class="line">1 3 2 4</span><br></pre></td></tr></table></figure><h3 id="【样例输出】-4"><a href="#【样例输出】-4" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">5</span><br></pre></td></tr></table></figure><h2 id="试题-H-回忆迷宫"><a href="#试题-H-回忆迷宫" class="headerlink" title="试题 H: 回忆迷宫"></a>试题 H: 回忆迷宫</h2><h3 id="【问题描述】-7"><a href="#【问题描述】-7" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>爱丽丝刚从一处地下迷宫中探险归来，你能根据她对于自己行动路径的回忆，帮她画出迷宫地图吗？迷宫地图是基于二维网格的。爱丽丝会告诉你一系列她在迷宫中的移动步骤，每个移动步骤可能是上下左右四个方向中的一种，表示爱丽丝往这个方向走了一格。你需要根据这些移动步骤给出一个迷宫地图，并满足以下条件：</li><li>1、爱丽丝能在迷宫内的某个空地开始，顺利的走完她回忆的所有移动步<br>骤。</li><li>2、迷宫内不存在爱丽丝没有走过的空地。</li><li>3、迷宫是封闭的，即可通过墙分隔迷宫内与迷宫外。任意方向的无穷远处<br>视为迷宫外，所有不与迷宫外联通的空地都视为是迷宫内。（迷宫地图为四联<br>通，即只有上下左右视为联通）</li><li>4、在满足前面三点的前提下，迷宫的墙的数量要尽可能少。</li></ul><h3 id="【输入格式】-5"><a href="#【输入格式】-5" class="headerlink" title="【输入格式】"></a>【输入格式】</h3><ul><li>第一行一个正整数 N，表示爱丽丝回忆的步骤数量。</li><li>接下来一行 N 个英文字符，仅包含 UDLR 四种字符，分别表示上（Up）、</li><li>下（Down）、左（Left）、右（Right）。</li></ul><h3 id="【输出格式】-5"><a href="#【输出格式】-5" class="headerlink" title="【输出格式】"></a>【输出格式】</h3><ul><li>请通过字符画的形式输出迷宫地图。迷宫地图可能包含许多行，用字符 ‘*’表示墙，用 ‘ ’（空格）表示非墙。你的输出需要保证以下条件：</li><li>1、至少有一行第一个字符为 ‘*’。</li><li>2、第一行至少有一个字符为 ‘*’。</li><li>3、每一行的最后一个字符为 ‘*’。</li><li>4、最后一行至少有一个字符为 ‘*’。</li></ul><h3 id="【样例输入】-5"><a href="#【样例输入】-5" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">17</span><br><span class="line">UUUULLLLDDDDRRRRU</span><br></pre></td></tr></table></figure><h3 id="【样例输出】-5"><a href="#【样例输出】-5" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">*****</span><br><span class="line">* *</span><br><span class="line">* *** *</span><br><span class="line">* *** *</span><br><span class="line">* *** *</span><br><span class="line">* *</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><h3 id="【样例说明】-1"><a href="#【样例说明】-1" class="headerlink" title="【样例说明】"></a>【样例说明】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">      爱丽丝可以把第六行第六个字符作为起点。</span><br><span class="line">外墙墙墙墙墙外</span><br><span class="line">墙内内内内内墙</span><br><span class="line">墙内墙墙墙内墙</span><br><span class="line">墙内墙墙墙内墙</span><br><span class="line">墙内墙墙墙内墙</span><br><span class="line">墙内内内内内墙</span><br><span class="line">外墙墙墙墙墙外</span><br></pre></td></tr></table></figure><h2 id="试题-I-红绿灯"><a href="#试题-I-红绿灯" class="headerlink" title="试题 I: 红绿灯"></a>试题 I: 红绿灯</h2><h3 id="【问题描述】-8"><a href="#【问题描述】-8" class="headerlink" title="【问题描述】"></a>【问题描述】</h3><ul><li>爱丽丝要开车去上班，上班的路上有许多红绿灯，这让爱丽丝很难过。为了上班不迟到，她给自己的车安装了氮气喷射装置。现在她想知道自己上班最短需要多少时间。</li><li>爱丽丝的车最高速度是 1<br>V 米每秒，并且经过改装后，可以瞬间加速到小于等于最高速的任意速度，也可以瞬间停止。</li><li>爱丽丝家离公司有 N 米远，路上有 M 个红绿灯，第 i 个红绿灯位于离爱丽丝家 Ai 米远的位置，绿灯持续 Bi 秒，红灯持续 Ci 秒。在初始时（爱丽丝开始计时的瞬间），所有红绿灯都恰好从红灯变为绿灯。如果爱丽丝在绿灯变红的瞬间到达红绿灯，她会停下车等红灯，因为她是遵纪守法的好市民。</li><li>氮气喷射装置可以让爱丽丝的车瞬间加速到超光速（且不受相对论效应的影响！），达到瞬移的效果，但是爱丽丝是遵纪守法的好市民，在每个红绿灯前她都会停下氮气喷射，即使是绿灯，因为红绿灯处有斑马线，而使用氮气喷射装置通过斑马线是违法的。此外，氮气喷射装置不能连续启动，需要一定时间的冷却，表现为通过 K 个红绿灯后才能再次使用。（也就是说，如果 K &#x3D; 1，就能一直使用啦！）初始时，氮气喷射装置处于可用状态。</li></ul><h3 id="【输入格式】-6"><a href="#【输入格式】-6" class="headerlink" title="【输入格式】"></a>【输入格式】</h3><ul><li>第一行四个正整数 N、M、K、V，含义如题面所述。</li><li>接下来 M 行，每行三个正整数 Ai、Bi、Ci，含义如题面所述。</li></ul><h3 id="【输出格式】-6"><a href="#【输出格式】-6" class="headerlink" title="【输出格式】"></a>【输出格式】</h3><ul><li>输出一个正整数 T，表示爱丽丝到达公司最短需要多少秒。</li></ul><h3 id="【样例输入】-6"><a href="#【样例输入】-6" class="headerlink" title="【样例输入】"></a>【样例输入】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">90 2 2 2</span><br><span class="line">30 20 20</span><br><span class="line">60 20 20</span><br></pre></td></tr></table></figure><h3 id="【样例输出】-6"><a href="#【样例输出】-6" class="headerlink" title="【样例输出】"></a>【样例输出】</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">80</span><br></pre></td></tr></table></figure><h3 id="【样例说明】-2"><a href="#【样例说明】-2" class="headerlink" title="【样例说明】"></a>【样例说明】</h3><ul><li>爱丽丝在最开始直接使用氮气喷射装置瞬间到达第一个红绿灯，然后绿灯通过，以最高速行进 60 秒后到达第二个红绿灯，此时绿灯刚好变红，于是她等待 20 秒再次变为绿灯后通过该红绿灯，此时氮气喷射装置冷却完毕，爱丽丝再次使用瞬间到达公司，总共用时 80 秒。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/post/5c2fafc7.html"/>
      <url>/post/5c2fafc7.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode热题</title>
      <link href="/post/6096f3d5.html"/>
      <url>/post/6096f3d5.html</url>
      
        <content type="html"><![CDATA[<h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><h3 id="最长公共前缀"><a href="#最长公共前缀" class="headerlink" title="最长公共前缀"></a>最长公共前缀</h3><ul><li>编写一个函数来查找字符串数组中的最长公共前缀。如果不存在公共前缀，返回空字符串 <code>&quot;&quot;</code>。</li></ul><h3 id="给出示例"><a href="#给出示例" class="headerlink" title="给出示例"></a>给出示例</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：strs = [<span class="string">&quot;flower&quot;</span>,<span class="string">&quot;flow&quot;</span>,<span class="string">&quot;flight&quot;</span>]</span><br><span class="line">输出：<span class="string">&quot;fl&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：strs = [<span class="string">&quot;dog&quot;</span>,<span class="string">&quot;racecar&quot;</span>,<span class="string">&quot;car&quot;</span>]</span><br><span class="line">输出：<span class="string">&quot;&quot;</span></span><br><span class="line">解释：输入不存在公共前缀。</span><br></pre></td></tr></table></figure><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><ul><li>标签：链表</li><li>当字符串数组长度为 0 时则公共前缀为空，直接返回；</li><li>令最长公共前缀 ans 的值为第一个字符串，进行初始化；</li><li>遍历后面的字符串，依次将其与 ans 进行比较，两两找出公共前缀，最终结果即为最长公共前缀；</li><li>如果查找过程中出现了 ans 为空的情况，则公共前缀不存在直接返回；</li><li>时间复杂度：O(s)O(s)，s 为所有字符串的长度之和。</li></ul><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Solution</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">longestCommonPrefix</span><span class="params">(String[] strs)</span> &#123;</span><br><span class="line">        <span class="keyword">if</span>(strs.length == <span class="number">0</span>) </span><br><span class="line">            <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">ans</span> <span class="operator">=</span> strs[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span><span class="number">1</span>;i&lt;strs.length;i++) &#123;</span><br><span class="line">            <span class="type">int</span> j=<span class="number">0</span>;</span><br><span class="line">            <span class="keyword">for</span>(;j&lt;ans.length() &amp;&amp; j &lt; strs[i].length();j++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(ans.charAt(j) != strs[i].charAt(j))</span><br><span class="line">                    <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ans = ans.substring(<span class="number">0</span>, j);</span><br><span class="line">            <span class="keyword">if</span>(ans.equals(<span class="string">&quot;&quot;</span>))</span><br><span class="line">                <span class="keyword">return</span> ans;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> java </tag>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
